# Load function for multiple site measures of beta diversity

## Note that this function is capable of calculatig all three partitions (i.e. it includes 
## Baselga's multiple-site partition), but these must be specified using the index.family 
## argument of Baselga's beta.multi (i.e. 'carvalho' is default). This is directly 
## modified from the betapart package of Baselga et al. (2013), see also: 
## http://127.0.0.1:20382/library/betapart/html/betapart-package.html

beta.multi.carv <- function (x, index.family = "carvalho") 
{library(betapart)
    index.family <- match.arg(index.family, c("jaccard", "sorensen","carvalho"))
    if (!inherits(x, "betapart")) {
        x <- betapart.core(x)
    }
    maxbibj <- sum(x$max.not.shared[lower.tri(x$max.not.shared)])
    minbibj <- sum(x$min.not.shared[lower.tri(x$min.not.shared)])
    switch(index.family, sorensen = {
        beta.sim <- minbibj/(minbibj + x$a)
        beta.sne <- (x$a/(minbibj + x$a)) * ((maxbibj - minbibj)/((2 * 
            x$a) + maxbibj + minbibj))
        beta.sor <- (minbibj + maxbibj)/(minbibj + maxbibj + 
            (2 * x$a))
        multi <- list(beta.SIM = beta.sim, beta.SNE = beta.sne, 
            beta.SOR = beta.sor)
    }, jaccard = {
        beta.jtu <- (2 * minbibj)/((2 * minbibj) + x$a)
        beta.jne <- (x$a/((2 * minbibj) + x$a)) * ((maxbibj - 
            minbibj)/((x$a) + maxbibj + minbibj))
        beta.jac <- (minbibj + maxbibj)/(minbibj + maxbibj + 
            x$a)
        multi <- list(beta.JTU = beta.jtu, beta.JNE = beta.jne, 
            beta.JAC = beta.jac)
    }, carvalho = {
        beta.3 <- (2 * minbibj)/(minbibj + maxbibj + x$a)
        beta.rich <- ((maxbibj - minbibj)/(minbibj + maxbibj + x$a))
        beta.cc <- (minbibj + maxbibj)/(minbibj + maxbibj + x$a)
        multi <- list(beta.3multi = beta.3, beta.RICH = beta.rich, 
            beta.CC = beta.cc)
    })
    return(multi)
}
